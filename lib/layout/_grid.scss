@import "./media";

$grid-gutter: (
  xs: 16px,
  md: 24px,
) !default;

$grid-space-around: (
  xs: 24px,
  md: 64px,
  lg: 40px,
) !default;

$grid-columns: (
  default: 12,
) !default;

$grid-container-width: (
  xs: 1440px,
) !default;


/// Gets a column width
/// @param {string} $breakpoint-name - one of breakpoint names declared in the media configuration
/// @param {number} $columns-count
@function grid-column-width($breakpoint-name, $columns-count) {
  @if map-has-key($grid-columns, $breakpoint-name) {
    @return $columns-count / map-get($grid-columns, $breakpoint-name) * 100%;
  } @else {
    @return $columns-count / map-get($grid-columns, default) * 100%;
  }
}

/// Creates a grid container
@mixin grid-container {
  width: 100%;
  margin: 0 auto;

  @each $breakpoint-name, $space in $grid-container-width {
    @include media-up($breakpoint-name) {
      max-width: $space;
    }
  }

  @each $breakpoint-name, $space in $grid-space-around {
    @include media-up($breakpoint-name) {
      padding-left: $space;
      padding-right: $space;
    }
  }
}

/// Creates a grid row
@mixin grid-row {
  display: flex;
  flex-wrap: wrap;

  @each $breakpoint-name, $gutter in $grid-gutter {
    @include media-up($breakpoint-name) {
      margin-left: $gutter / -2;
      margin-right: $gutter / -2;
    }
  }
}

/// Sets a grid column width properties
/// @param {string} $width
@mixin set-grid-column-width($width) {
  width: $width;
  max-width: $width;
  flex-basis: $width;
}

/// Sets a grid column width properties for nested column
/// @param {number} $columns-count
/// @param {number} $container-size - container size in columns
/// @param {string} $breakpoint-name - one of breakpoint names declared in the media configuration
@mixin set-nested-column-width($columns-count, $container-size, $breakpoint-name) {
  @include set-grid-column-width(
    grid-column-width($breakpoint-name, $columns-count) * (12 / $container-size)
  );
}

/// Creates a grid column
/// @param {map} $columns [()] - columns map like: `(xs: 12, md: 6, xl: 4)`
@mixin grid-column($columns: ()) {
  flex-grow: 0;
  flex-shrink: 0;

  @each $breakpoint-name, $gutter in $grid-gutter {
    @include media-up($breakpoint-name) {
      padding-left: $gutter / 2;
      padding-right: $gutter / 2;
    }
  }

  @each $breakpoint-name, $columns-count in $columns {
    @include media-up($breakpoint-name) {
      @include set-grid-column-width(grid-column-width($breakpoint-name, $columns-count));
    }
  }
}

/// Creates a grid column's offset
/// @param {map} $columns [()] - columns map like: `(xs: 12, md: 6, xl: 4)`
@mixin grid-offset($columns) {
  @each $breakpoint-name, $column-count in $columns {
    @include media-up($breakpoint-name) {
      margin-left: grid-column-width($breakpoint-name, $column-count);
    }
  }
}
